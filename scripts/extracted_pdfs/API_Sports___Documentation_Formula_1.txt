# Extracted from: API-Sports - Documentation Formula-1.pdf
# Original file: C:\Users\kaleb\OneDrive\Desktop\DBSBM\bot\data\api_sports_docs\API-Sports - Documentation Formula-1.pdf
# Extracted on: 1753061290.7085774
================================================================================


--- Page 1 ---
API-FORMULA-1(1.3.1)
api-sports:support@api-football.comURL: https://dashboard.api-football.com
Introduction
Welcome to Api-Formula-1! You can use our API to access all API endpoints, which can get information
about Formula-1 competition.
We have language bindings in C, C#, cURL, Dart, Go, Java, Javascript, NodeJs, Objective-c, OCaml, Php,
PowerShell, Python, Ruby, Shell and Swift! You can view code examples in the dark area to the right, and
you can switch the programming language of the examples with the tabs in the top right.
Authentication
We uses API keys to allow access to the API. You can register a new API key in rapidapi or directly on our
dashboard.
The accounts on RapidAPI and on our Dashboard are dissociated. Each of these registration methods has
its own URL and API-KEY. You must therefore adapt your scripts according to your subscription by
adapting the URL and your API-KEY.
RAPIDAPI : https://api-formula-1.p.rapidapi.com/
API-SPORTS : https://v1.formula-1.api-sports.io/
Our API expects for the API key to be included in all API requests to the server in a header that looks like
the following:
Make sure to replace XxXxXxXxXxXxXxXxXxXxXxXx  with your API key.
REQUESTS HEADERS & CORS
The API is configured to work only with GET requests and allows only the headers listed below:|7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 1/56

--- Page 2 ---
x-rapidapi-host
x-rapidapi-key
x-apisports-key
If you make non-GET requests or add headers that are not in the list, you will receive an error from the API.
Some frameworks (especially in JS, nodeJS..) automatically add extra headers, you have to make sure to
remove them in order to get a response from the API.
RAPIDAPI Account
All information related to your subscription are available on the rapidApi developer dashboard.
The RapidAPI developer dashboard is where you can see all of your apps, locate API keys, view analytics,
and manage billing settings.
To access the dashboard, simply login to RapidAPI and select 'My Apps' in the top-right menu.
Alternatively, you can head directly to https://rapidapi.com/developer/dashboard.
In the main dashboard, you will see account-wide analytics and account information. To get more detailed
information, you can select tabs on the left-hand side of the screen.
App Specific Analytics
Using the RapidAPI dashboard, you can also view analytics specific to each app in your account. To do so,
switch over to the 'Analytics' tab of your application in the dashboard.
On the top of the page, you'll be able to see a chart with all the calls being made to all the APIs your app is
connected to. You'll also be able to see a log with all the request data. You are also able to filter these
analytics to only show certain APIs within the app.
In each graph, you can view the following metrics:
API Calls : how many requests are being made
Error rates : how many requests are error some
Latency : how long (on average) requests take to execute
You may change the time period you're looking at by clicking the calendar icon and choosing a time range.
Headers sent as response
When consuming our API, you will always receive the following headers appended to the response:
server: The current version of the API proxy used by RapidAPI.
x-ratelimit-requests-limit : The number of requests the plan you are currently subscribed to
allows you to make, before incurring overages.7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 2/56

--- Page 3 ---
x-ratelimit-requests-remaining : The number of requests remaining before you reach the limit
of requests your application is allowed to make, before experiencing overage charges.
X-RapidAPI-Proxy-Response : This header is set to true when the RapidAPI proxy generates the
response, (i.e. the response is not generated from our servers)
API-SPORTS Account
If you decided to subscribe directly on our site, you have a dashboard at your disposal at the following url:
dashboard
It allows you to:
To follow your consumption in real time
Manage your subscription and change it if necessary
Check the status of our servers
Test all endpoints without writing a line of code.
You can also consult all this information directly through the API by calling the endpoint status.
This call does not count against the daily quota.
get"https://v1.formula-1.api-sports.io/status"
// response
    "get": "status"
    "parameters" : 
    "errors" : 
    "results" : 1
    "response" : 
        "account" : 
            "firstname" : "xxxx"
            "lastname" : "XXXXXX"
            "email": "xxx@xxx.com"
        
        "subscription" : 
            "plan": "Free"
            "end": "2020-04-10T23:24:27+00:00"
            "active" : true
        
        "requests" : 
            "current" : 12
            "limit_day" : 100
        
(
)
;
{
,
[
]
,
[
]
,
,
{
{
,
,
}
,
{
,
,
}
,
{
,
}7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 3/56

--- Page 4 ---
    
Headers sent as response
When consuming our API, you will always receive the following headers appended to the response:
x-ratelimit-requests-limit : The number of requests allocated per day according to your
subscription.
x-ratelimit-requests-remaining : The number of remaining requests per day according to your
subscription.
X-RateLimit-Limit : Maximum number of API calls per minute.
X-RateLimit-Remaining : Number of API calls remaining before reaching the limit per minute.
Dashboard
Requests
}
}7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 4/56

--- Page 5 ---
Live tester
Architecture7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 5/56

--- Page 6 ---
Logos / Images
Calls to logos/images do not count towards your daily quota. However these calls are subject to a rate per
second & minute, it is recommended to save this data on your side in order not to slow down or impact the
user experience of your application or website. For this you can use CDNs such as bunny.net.
We have a tutorial available here, which explains how to set up your own media system with BunnyCDN.
Logos, images and trademarks delivered through the API are provided solely for identification and
descriptive purposes (e.g., identifying leagues, teams, players or venues). We does not own any of these
visual assets, and no intellectual property rights are claimed over them. Some images or data may be
subject to intellectual property or trademark rights held by third parties (including but not limited to
leagues, federations, or clubs). The use of such content in your applications, websites, or products may
require additional authorization or licensing from the respective rights holders. You are fully responsible
for ensuring that your usage of any logos, images, or branded content complies with applicable laws in
your country or the countries where your services are made available. We are not affiliated with, sponsored
by, or endorsed by any sports league, federation, or brand featured in the data provided.
Sample Scripts7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 6/56

--- Page 7 ---
 Here are some examples of how the API is used in the main development languages.
You have to replace {endpoint}  by the real name of the endpoint you want to call, like competitions
or races for example. In all the sample scripts we will use the competitions  endpoint as example.
Also you will have to replace XxXxXxXxXxXxXxXxXxXxXx  with your API-KEY provided in the dashboard or
on rapidapi.
C
libcurl
CURL *curl
CURLcode res
curl = curl_easy_init
ifcurl 
  curl_easy_setopt curl, CURLOPT_CUSTOMREQUEST, "GET"
  curl_easy_setopt curl, CURLOPT_URL, "https://v1.formula-1.api-sports.io/competit
  curl_easy_setopt curl, CURLOPT_FOLLOWLOCATION, 1L
  curl_easy_setopt curl, CURLOPT_DEFAULT_PROTOCOL, "https"
  struct curl_slist *headers = NULL
  headers = curl_slist_append headers, "x-rapidapi-key: XxXxXxXxXxXxXxXxXxXxXxXx"
  headers = curl_slist_append headers, "x-rapidapi-host: v1.formula-1.api-sports.i
  curl_easy_setopt curl, CURLOPT_HTTPHEADER, headers
  res = curl_easy_perform curl
curl_easy_cleanup curl
C#
RestSharp
var client = new RestClient "https://v1.formula-1.api-sports.io/competitions"
client.Timeout = -1
var request = new RestRequest Method.GET
request.AddHeader "x-rapidapi-key" , "XxXxXxXxXxXxXxXxXxXxXxXx"
;
;
(
)
;
(
)
{
(
)
;
(
(
)
;
(
)
;
;
(
)
(
(
)
;
(
)
;
}
(
)
;
(
)
;
;
(
)
;
(
)
;7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 7/56

--- Page 8 ---
 request.AddHeader "x-rapidapi-host" , "v1.formula-1.api-sports.io"
IRestResponse response = client.Execute request
Console.WriteLine response.Content
cURL
Curl
curl --request GET 
    --url https://v1.formula-1.api-sports.io/competitions 
    --header 'x-rapidapi-host: v1.formula-1.api-sports.io'  
    --header 'x-rapidapi-key: XxXxXxXxXxXxXxXxXxXxXxXx'
Dart
http
var headers = 
  'x-rapidapi-key'  'XxXxXxXxXxXxXxXxXxXxXxXx'
  'x-rapidapi-host'  'v1.formula-1.api-sports.io'
var request = httpRequest 'GET' Uriparse'https://v1.formula-1.api-sports.io/co
request headers addAllheaders
httpStreamedResponse response = await request send
if response statusCode == 200 
  printawait response streambytesToString
else 
  printresponse reasonPhrase
(
)
;
(
)
;
(
)
;
\
\
\
{
:
,
:
}
;
.
(
,
.
(
.
.
(
)
;
.
.
(
)
;
(
.
)
{
(
.
.
(
)
)
;
}
{
(
.
)
;
}7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 8/56

--- Page 9 ---
Go
Native
package main
import 
  "fmt"
  "net/http"
  "io/ioutil"
func main 
  url := "https://v1.formula-1.api-sports.io/competitions"
  method := "GET"
  client := &httpClient 
  
  req err := httpNewRequest method url nil
  if err != nil 
    fmt Println err
    return
  
  reqHeaderAdd"x-rapidapi-key"  "XxXxXxXxXxXxXxXxXxXxXxXx"
  reqHeaderAdd"x-rapidapi-host"  "v1.formula-1.api-sports.io"
  res err := client Doreq
  if err != nil 
    fmt Println err
    return
  
  defer resBodyClose
  body err := ioutil ReadAll resBody
  if err != nil 
    fmt Println err
    return
  
  fmtPrintln stringbody
(
)
(
)
{
.
{
}
,
.
(
,
,
)
{
.
(
)
}
.
.
(
,
)
.
.
(
,
)
,
.
(
)
{
.
(
)
}
.
.
(
)
,
.
(
.
)
{
.
(
)
}
.
(
(
)
)
}7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 9/56

--- Page 10 ---
 Java
OkHttp
var myHeaders = new Headers
myHeaders append"x-rapidapi-key"  "XxXxXxXxXxXxXxXxXxXxXxXx"
myHeaders append"x-rapidapi-host"  "v1.formula-1.api-sports.io"
var requestOptions = 
  method : 'GET'
  headers : myHeaders
  redirect : 'follow'
Unirest
Unirest setTimeouts 0 0
HttpResponse String response = Unirest get"https://v1.formula-1.api-sports.io/co
  header"x-rapidapi-key"  "XxXxXxXxXxXxXxXxXxXxXxXx"
  header"x-rapidapi-host"  "v1.formula-1.api-sports.io"
  asString
Javascript
Fetch
var myHeaders = new Headers
myHeaders append"x-rapidapi-key"  "XxXxXxXxXxXxXxXxXxXxXxXx"
myHeaders append"x-rapidapi-host"  "v1.formula-1.api-sports.io"
var requestOptions = 
  method: 'GET'
  headers: myHeaders
(
)
;
.
(
,
)
;
.
(
,
)
;
{
,
,
}
;
.
(
,
)
;
<
>
.
(
.
(
,
)
.
(
,
)
.
(
)
;
(
)
;
.
(
,
)
;
.
(
,
)
;
{
,
,7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 10/56

--- Page 11 ---
  redirect : 'follow'
fetch"https://v1.formula-1.api-sports.io/competitions"  requestOptions
  thenresponse  => response text
  thenresult => console logresult
  catcherror => console log'error'  error
jQuery
var settings = 
  "url": "https://v1.formula-1.api-sports.io/competitions"
  "method" : "GET"
  "timeout" : 0
  "headers" : 
    "x-rapidapi-key" : "XxXxXxXxXxXxXxXxXxXxXxXx"
    "x-rapidapi-host" : "v1.formula-1.api-sports.io"
  
$ajaxsettings donefunction  response  
  console logresponse
XHR
var xhr = new XMLHttpRequest
xhrwithCredentials = true
xhraddEventListener "readystatechange"  function  
  ifthisreadyState === 4 
    console logthisresponseText
  
xhropen"GET" "https://v1.formula-1.api-sports.io/competitions"
xhrsetRequestHeader "x-rapidapi-key"  "XxXxXxXxXxXxXxXxXxXxXxXx"
xhrsetRequestHeader "x-rapidapi-host"  "v1.formula-1.api-sports.io"
xhrsend
}
;
(
,
)
.
(
.
(
)
)
.
(
.
(
)
)
.
(
.
(
,
)
)
;
{
,
,
,
{
,
}
,
}
;
.
(
)
.
(
(
)
{
.
(
)
;
}
)
;
(
)
;
.
;
.
(
,
(
)
{
(
.
)
{
.
(
.
)
;
}
}
)
;
.
(
,
)
;
.
(
,
)
;
.
(
,
)
;
.
(
)
;7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 11/56

--- Page 12 ---
NodeJs
Axios
var axios = require 'axios'
var config = 
  method  'get'
  url 'https://v1.formula-1.api-sports.io/competitions'
  headers  
    'x-rapidapi-key'  'XxXxXxXxXxXxXxXxXxXxXxXx'
    'x-rapidapi-host'  'v1.formula-1.api-sports.io'
  
axiosconfig
thenfunction  response  
  console logJSONstringify response data
catchfunction  error 
  console logerror
Native
var https = require 'follow-redirects' https
var fs = require 'fs'
var options = 
  'method'  'GET'
  'hostname'  'v1.formula-1.api-sports.io'
  'path' '/competitions'
  'headers'  
    'x-rapidapi-key'  'XxXxXxXxXxXxXxXxXxXxXxXx'
    'x-rapidapi-host'  'v1.formula-1.api-sports.io'
  
  'maxRedirects'  20
var req = httpsrequest options  function  res 
  var chunks = 
(
)
;
{
:
,
:
,
:
{
:
,
:
}
}
;
(
)
.
(
(
)
{
.
(
.
(
.
)
)
;
}
)
.
(
(
)
{
.
(
)
;
}
)
;
(
)
.
;
(
)
;
{
:
,
:
,
:
,
:
{
:
,
:
}
,
:
}
;
.
(
,
(
)
{
[
]
;7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 12/56

--- Page 13 ---
  reson"data" function  chunk 
    chunks pushchunk
  
  reson"end" function  chunk 
    var body = Buffer concatchunks
    console logbodytoString
  
  reson"error"  function  error 
    console errorerror
  
reqend
Requests
var request = require 'request'
var options = 
  'method'  'GET'
  'url' 'https://v1.formula-1.api-sports.io/competitions'
  'headers'  
    'x-rapidapi-key'  'XxXxXxXxXxXxXxXxXxXxXxXx'
    'x-rapidapi-host'  'v1.formula-1.api-sports.io'
  
request options  function  error response  
  if error throw new Errorerror
  console logresponse body
Unirest
var unirest = require 'unirest'
var req = unirest 'GET' 'https://v1.formula-1.api-sports.io/competitions'
  headers
    'x-rapidapi-key'  'XxXxXxXxXxXxXxXxXxXxXxXx'
    'x-rapidapi-host'  'v1.formula-1.api-sports.io'
  
  endfunction  res 
    if reserror throw new Errorreserror
    console logresraw_body
  
.
(
,
(
)
{
.
(
)
;
}
)
;
.
(
,
(
)
{
.
(
)
;
.
(
.
(
)
)
;
}
)
;
.
(
,
(
)
{
.
(
)
;
}
)
;
}
)
;
.
(
)
;
(
)
;
{
:
,
:
,
:
{
:
,
:
}
}
;
(
,
(
,
)
{
(
)
(
)
;
.
(
.
)
;
}
)
;
(
)
;
(
,
)
.
(
{
:
,
:
}
)
.
(
(
)
{
(
.
)
(
.
)
;
.
(
.
)
;
}
)
;7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 13/56

--- Page 14 ---
 Objective-c
NSURLSession
#import <Foundation /Foundation h>
dispatch_semaphore_t sema = dispatch_semaphore_create 0
NSMutableURLRequest *request = NSMutableURLRequest requestWithURL NSURL URLWithS
  cachePolicy NSURLRequestUseProtocolCachePolicy
  timeoutInterval 10.0
NSDictionary *headers = @
  @"x-rapidapi-key"  @"XxXxXxXxXxXxXxXxXxXxXxXx"
  @"x-rapidapi-host"  @"v1.formula-1.api-sports.io"
request setAllHTTPHeaderFields headers
request setHTTPMethod @"GET"
NSURLSession *session = NSURLSession sharedSession
NSURLSessionDataTask *dataTask = session dataTaskWithRequest request
completionHandler ^NSData *data NSURLResponse *response  NSError *error 
  if error 
    NSLog@"%@" error
    dispatch_semaphore_signal sema
   else 
    NSHTTPURLResponse *httpResponse = NSHTTPURLResponse * response
    NSError *parseError = nil
    NSDictionary *responseDictionary = NSJSONSerialization JSONObjectWithData dat
    NSLog@"%@"responseDictionary
    dispatch_semaphore_signal sema
  
dataTask resume
dispatch_semaphore_wait sema DISPATCH_TIME_FOREVER
.
(
)
;
[
:
[
:
:
]
;
{
:
,
:
}
;
[
:
]
;
[
:
]
;
[
]
;
[
:
:
(
,
,
)
{
(
)
{
(
,
)
;
(
)
;
}
{
(
)
;
;
[
:
(
,
)
;
(
)
;
}
}
]
;
[
]
;
(
,
)
;7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 14/56

--- Page 15 ---
OCaml
Cohttp
open Lwt
open Cohttp
open Cohttp_lwt_unix
let reqBody =
  let uri = Uriof_string "https://v1.formula-1.api-sports.io/competitions"  in
  let headers = Header init 
    |> fun h -> Header add h "x-rapidapi-key"  "XxXxXxXxXxXxXxXxXxXxXxXx"
    |> fun h -> Header add h "x-rapidapi-host"  "v1.formula-1.api-sports.io"
  in
  Client call ~headers `GET uri >>= fun _resp body ->
  body |> Cohttp_lwt Bodyto_string >|= fun body -> body
let  =
  let respBody = Lwt_main run reqBody in
  print_endline respBody
Php
cURL
$curl = curl_init
curl_setopt_array $curl array
  CURLOPT_URL  => 'https://v1.formula-1.api-sports.io/competitions'
  CURLOPT_RETURNTRANSFER  => true
  CURLOPT_ENCODING  => ''
  CURLOPT_MAXREDIRS  => 10
  CURLOPT_TIMEOUT  => 0
  CURLOPT_FOLLOWLOCATION  => true
  CURLOPT_HTTP_VERSION  => CURL_HTTP_VERSION_1_1
  CURLOPT_CUSTOMREQUEST  => 'GET'
.
.
(
)
.
.
.
(
,
)
.
.
(
)
.
(
)
(
)
;
(
,
(
,
,
,
,
,
,
,
,7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 15/56

--- Page 16 ---
  CURLOPT_HTTPHEADER  => array
    'x-rapidapi-key: XxXxXxXxXxXxXxXxXxXxXxXx'
    'x-rapidapi-host: v1.formula-1.api-sports.io'
  
$response  = curl_exec $curl
curl_close $curl
echo $response
Request2
<?php
require_once  'HTTP/Request2.php'
$request  = new HTTP_Request2
$request ->setUrl'https://v1.formula-1.api-sports.io/competitions'
$request ->setMethod HTTP_Request2 ::METHOD_GET
$request ->setConfig array
  'follow_redirects'  => TRUE
$request ->setHeader array
  'x-rapidapi-key'  => 'XxXxXxXxXxXxXxXxXxXxXxXx'
  'x-rapidapi-host'  => 'v1.formula-1.api-sports.io'
try 
  $response  = $request ->send
  if $response ->getStatus  == 200 
    echo $response ->getBody
  
  else 
    echo 'Unexpected HTTP status: '  . $response ->getStatus  . ' ' .
    $response ->getReasonPhrase
  
catchHTTP_Request2_Exception  $e 
  echo 'Error: '  . $e->getMessage
Http
$client = new httpClient
$request  = new httpClientRequest
$request ->setRequestUrl 'https://v1.formula-1.api-sports.io/competitions'
$request ->setRequestMethod 'GET'
$request ->setHeaders array
(
,
)
,
)
)
;
(
)
;
(
)
;
;
;
(
)
;
(
)
;
(
)
;
(
(
)
)
;
(
(
,
)
)
;
{
(
)
;
(
(
)
)
{
(
)
;
}
{
(
)
(
)
;
}
}
(
)
{
(
)
;
}
\
;
\
\
;
(
)
;
(
)
;
(
(7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 16/56

--- Page 17 ---
     'x-rapidapi-host'  => 'v1.formula-1.api-sports.io'
    'x-rapidapi-key'  => 'XxXxXxXxXxXxXxXxXxXxXxXx'
$client->enqueue $request ->send
$response  = $client->getResponse
echo $response ->getBody
PowerShell
RestMethod
$headers = New-Object "System.Collections.Generic.Dictionary[[String],[String]]"
$headers Add"x-rapidapi-key"  "XxXxXxXxXxXxXxXxXxXxXxXx"
$headers Add"x-rapidapi-host"  "v1.formula-1.api-sports.io"
$response = Invoke-RestMethod 'https://v1.formula-1.api-sports.io/competitions'  -M
$response | ConvertTo -Json
Python
http.client
import httpclient
conn = httpclientHTTPSConnection "v1.formula-1.api-sports.io"
headers = 
    'x-rapidapi-host'  "v1.formula-1.api-sports.io"
    'x-rapidapi-key'  "XxXxXxXxXxXxXxXxXxXxXxXx"
    
connrequest "GET" "/competitions"  headers =headers
res = conngetresponse
data = resread
,
)
)
;
(
)
(
)
;
(
)
;
(
)
;
.
(
,
)
.
(
,
)
.
.
.
(
)
{
:
,
:
}
.
(
,
,
)
.
(
)
.
(
)7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 17/56

--- Page 18 ---
printdatadecode"utf-8"
Requests
url = "https://v1.formula-1.api-sports.io/competitions"
payload=
headers = 
  'x-rapidapi-key'  'XxXxXxXxXxXxXxXxXxXxXxXx'
  'x-rapidapi-host'  'v1.formula-1.api-sports.io'
response = requests request "GET" url headers =headers  data=payload
printresponse text
Ruby
Net::HTTP
require 'uri'
require 'net/http'
require 'openssl'
url = URI"https://v1.formula-1.api-sports.io/competitions"
http = NetHTTPnewurlhost urlport
httpuse_ssl = true
httpverify_mode = OpenSSL SSLVERIFY_NONE
request = NetHTTPGetnewurl
request "x-rapidapi-host"  = 'v1.formula-1.api-sports.io'
request "x-rapidapi-key"  = 'XxXxXxXxXxXxXxXxXxXxXxXx'
response = httprequest request
puts response read_body
(
.
(
)
)
{
}
{
:
,
:
}
.
(
,
,
,
)
(
.
)
(
)
::
.
(
.
,
.
)
.
.
::
::
::
::
.
(
)
[
]
[
]
.
(
)
.7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 18/56

--- Page 19 ---
 Shell
Httpie
http --follow --timeout 3600 GET 'https://v1.formula-1.api-sports.io/competitions'
 x-rapidapi-key: 'XxXxXxXxXxXxXxXxXxXxXxXx'  
 x-rapidapi-host: 'v1.formula-1.api-sports.io'
wget
wget --no-check-certificate --quiet 
  --method GET 
  --timeout =0 
  --header 'x-rapidapi-key: XxXxXxXxXxXxXxXxXxXxXxXx'  
  --header 'x-rapidapi-host: v1.formula-1.api-sports.io'  
   'https://v1.formula-1.api-sports.io/competitions'
Swift
URLSession
import Foundation
#if canImport FoundationNetworking
import FoundationNetworking
#endif
var semaphore = DispatchSemaphore  value 0
var request = URLRequest url URLstring "https://v1.formula-1.api-sports.io/comp
request addValue "XxXxXxXxXxXxXxXxXxXxXxXx"  forHTTPHeaderField  "x-rapidapi-key"
request addValue "v1.formula-1.api-sports.io"  forHTTPHeaderField  "x-rapidapi-hos
request httpMethod = "GET"
\
\
\
\
\
\
(
)
(
:
)
(
:
(
:
.
(
,
:
)
.
(
,
:
.7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 19/56

--- Page 20 ---
 let task = URLSession shareddataTask with request   data response  error in
  guard let data = data else 
    printStringdescribing  error
    semaphore signal
    return
  
  printStringdata data encoding  utf8!
  semaphore signal
taskresume
semaphore wait
Changelog
1.3.1
Add endpoint rankings/fastestlaps
Add endpoint rankings/startinggrid
Add endpoint pitstops
1.2.9
Added a fastest lap  field in the races endpoint which contains the driver id and the time to
complete it
Added more data for the circuits  endpoint (first_grand_prix, laps, length, race_distance,
lap_record)
Added more data for the teams endpoint (base, first_team_entry, world_championships,
highest_race_finish, pole_positions, fastest_laps, technical_manager, chassis)
Added more data for the drivers  endpoint (abbr, country, birthplace, number, grands_prix_entered,
world_championships, podiums, highest_race_finish, highest_grid_position, career_points)
Update of all teams logos for 2022 season
Update of all drivers photo for 2022 season
.
.
(
:
)
{
,
,
{
(
(
:
)
)
.
(
)
}
(
(
:
,
:
.
)
)
.
(
)
}
.
(
)
.
(
)7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 20/56

--- Page 21 ---
CDN
Optimizing Sports Websites with BunnyCDN
BunnyCDN is a Content Delivery Network (CDN) that delivers a global content distribution experience. With
strategically positioned servers, BunnyCDN ensures swift and reliable delivery of static content, optimizing
website performance with features like intelligent image optimization, sophisticated caching, and
advanced security measures.
Unlocking Media Delivery Excellence with BunnyCDN:
Quick Configuration: Set up your media CDN in just 5 minutes. Define cache times, customize your
domain – it's that simple.
Global Accessibility: Leverage BunnyCDN's expansive server network for swift and dependable
content delivery worldwide.
Customized Configuration: Tailor caching, define cache times, and implement CORS headers to
create an efficient and seamless user experience.
Own Your Domain: Personalize your media delivery with your domain, enhancing your brand's online
presence.
Robust Security: BunnyCDN integrates advanced security features, guaranteeing a secure
environment for delivering your content.
Responsive Performance: Experience responsive performance without the need for prior media
downloads. Discover the capabilities of BunnyCDN for optimized media delivery.
A tutorial is available here on our blog to help you configure it.
Databases Solutions7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 21/56

--- Page 22 ---
Enhance Your Data Management with Aiven
Integrating databases into your application can greatly enhance data management and storage. If you're
looking for high-performing, flexible, and secure database solutions, we recommend checking out Aiven.
Aiven is a cloud platform that offers a range of managed database services, including relational
databases, NoSQL databases, streaming data processing systems, and much more. Their offerings
include PostgreSQL , MySQL, Cassandra , Redis, Kafka, and many other databases, all with
simplified management, high availability, and advanced security.
Moreover, Aiven provides a free tier to get started, along with testing credits to explore their offerings. This
opportunity allows you to evaluate their platform and determine if it meets your needs.
One particularly attractive feature of Aiven is that they work with multiple cloud providers, including
Google Cloud , Amazon Web Services (AWS) , Microsoft Azure , DigitalOcean , and more.
This means you have the flexibility to choose the best cloud infrastructure for your project.
In terms of reliability, Aiven is committed to providing a 99.99% Service Level Agreement (SLA), ensuring
continuous and highly available service.
To test their services, visit this page.
If you're a developer, explore their DEV center for technical information.
Check out Aiven's documentation for detailed information on their services and features.
By integrating Aiven with our API, you can efficiently store, manage, and analyze your data while taking
advantage of their cloud database solutions' flexibility and scalability.
Real-Time Data Management with Firebase
When you're looking for a real-time data management solution for your application, Firebase's Realtime
Database is a powerful choice. Explore how Firebase can enhance real-time data management for your
application.
Firebase's Realtime Database offers a cloud-based real-time database that synchronizes data in real-time
across users and devices. This makes it an ideal choice for applications that require instant data updates.
Why Choose Firebase's Realtime Database?7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 22/56

--- Page 23 ---
Real-Time Data: Firebase allows you to store real-time data, meaning that updates are instantly
propagated to all connected users.
Easy Synchronization: Data is automatically synchronized across all devices, providing a consistent
and real-time user experience.
Built-In Security: Firebase offers flexible security rules to control data access and ensure privacy.
Simplified Integration: Firebase's Realtime Database easily integrates with other Firebase services,
simplifying backend management.
Helpful Links:
Explore Firebase's Realtime Database: Discover the features and advantages of Firebase's Realtime
Database for efficient real-time data management.
Firebase's Realtime Database Documentation: Refer to the comprehensive documentation for
Firebase's Realtime Database for a smooth integration.
A tutorial describing each step is available on our blog here.
Timezone
timezone
Get the list of available timezone to be used in the races endpoint.
This endpoint does not require any parameters.
HEADER PARAMETERS
string
Your API-Key
Responses
200 OKx-rapidapi-key
required7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 23/56

--- Page 24 ---
Request samples
PhpPythonNodeJavaScriptCurlRubyUse Cases
$client = new httpClient
$request  = new httpClientRequest
$request ->setRequestUrl 'https://v1.formula-1.api-sports.io/timezone'
$request ->setRequestMethod 'GET'
$request ->setHeaders array
    'x-rapidapi-host'  => 'v1.formula-1.api-sports.io'
    'x-rapidapi-key'  => 'XxXxXxXxXxXxXxXxXxXxXxXx'
$client->enqueue $request ->send
$response  = $client->getResponse
echo $response ->getBody
Response samples
200GET/timezone
Copy
\
;
\
\
;
(
)
;
(
)
;
(
(
,
)
)
;
(
)
(
)
;
(
)
;
(
)
;
application/json
Expand allCollapse all Copy
{
"get": "timezone"
,
"parameters" : 
[ ]
,
"errors" : 
[ ]
,
"results" : 425
,Content type7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 24/56

--- Page 25 ---
Seasons"response" : -
[
"Africa/Abidjan" ,
"Africa/Accra" ,
"Africa/Addis_Ababa" ,
"Africa/Algiers" ,
"Africa/Asmara" ,
"Africa/Bamako"
]
}
seasons
Get all seasons available.
All seasons are only 4-digit keys. All results can be used in other endpoints as filters.
This endpoint does not require any parameters.
HEADER PARAMETERS
string
Your API-Key
Responses
200 OKx-rapidapi-key
required7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 25/56

--- Page 26 ---
Request samples
PhpPythonNodeJavaScriptCurlRubyUse Cases
$client = new httpClient
$request  = new httpClientRequest
$request ->setRequestUrl 'https://v1.formula-1.api-sports.io/seasons'
$request ->setRequestMethod 'GET'
$request ->setHeaders array
    'x-rapidapi-host'  => 'v1.formula-1.api-sports.io'
    'x-rapidapi-key'  => 'XxXxXxXxXxXxXxXxXxXxXxXx'
$client->enqueue $request ->send
$response  = $client->getResponse
echo $response ->getBody
Response samples
200GET/seasons
Copy
\
;
\
\
;
(
)
;
(
)
;
(
(
,
)
)
;
(
)
(
)
;
(
)
;
(
)
;
application/json
Expand allCollapse all Copy
{
"get": "seasons"
,
"parameters" : 
[ ]
,
"errors" : 
[ ]
,
"results" : 9
,Content type7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 26/56

--- Page 27 ---
Competitions"response" : -
[
2012,
2013,
2014,
2015,
2016,
2017,
2018,
2019,
2020
]
}
competitions
Get the list of available competitions.
The competition id are unique in the API and competitions keep it across all seasons
All the parameters of this endpoint can be used together.
QUERY PARAMETERS
integer
The id of the competition
string
Example:name=Australian Grand Prix
The name of the competition
string
Example:country=Australia
The name of the countryid
name
country7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 27/56

--- Page 28 ---
string
Example:city=Melbourne
The name of the city
string>= 3 characters
Example:search=Australian
Allow to search for a competition name
HEADER PARAMETERS
string
Your API-Key
Responses
200 OK
Request samples
PhpPythonNodeJavaScriptCurlRubyUse Cases
$client = new httpClient
$request  = new httpClientRequest
$request ->setRequestUrl 'https://v1.formula-1.api-sports.io/competitions'
$request ->setRequestMethod 'GET'
$request ->setHeaders array
    'x-rapidapi-host'  => 'v1.formula-1.api-sports.io'
    'x-rapidapi-key'  => 'XxXxXxXxXxXxXxXxXxXxXxXx'
$client->enqueue $request ->send
$response  = $client->getResponsecity
search
x-rapidapi-key
required
GET/competitions
Copy
\
;
\
\
;
(
)
;
(
)
;
(
(
,
)
)
;
(
)
(
)
;
(
)
;7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 28/56

--- Page 29 ---
Circuitsecho $response ->getBody
Response samples
200
(
)
;
application/json
Expand allCollapse all Copy
{
"get": "competitions"
,
"parameters" : -
{
"id": "1"
}
,
"errors" : 
[ ]
,
"results" : 1
,
"response" : -
[
 … +
{
}
]
}
circuits
Get the list of available circuits.
The circuit id are unique in the API and circuits keep it across all seasons
Sample image of a circuit :Content type7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 29/56

--- Page 30 ---
All the parameters of this endpoint can be used together.
QUERY PARAMETERS
integer
The id of the circuit
integer
The id of the competition
string
Example:name=Melbourne Grand Prix Circuit
The name of the circuit
string>= 3 characters
Example:search=Melbourne
Allow to search for a circuit name
HEADER PARAMETERS
string
Your API-Key
Responses
200 OK
Request samplesid
competition
name
search
x-rapidapi-key
required
GET/circuits7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 30/56

--- Page 31 ---
PhpPythonNodeJavaScriptCurlRubyUse Cases
$client = new httpClient
$request  = new httpClientRequest
$request ->setRequestUrl 'https://v1.formula-1.api-sports.io/circuits'
$request ->setRequestMethod 'GET'
$request ->setHeaders array
    'x-rapidapi-host'  => 'v1.formula-1.api-sports.io'
    'x-rapidapi-key'  => 'XxXxXxXxXxXxXxXxXxXxXxXx'
$client->enqueue $request ->send
$response  = $client->getResponse
echo $response ->getBody
Response samples
200
Copy
\
;
\
\
;
(
)
;
(
)
;
(
(
,
)
)
;
(
)
(
)
;
(
)
;
(
)
;
application/json
Expand allCollapse all Copy
{
"get": "circuits"
,
"parameters" : -
{
"id": "1"
}
,
"errors" : 
[ ]
,
"results" : 1
,
"response" : -
[
 … +
{
}
]
}Content type7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 31/56

--- Page 32 ---
Teams
teams
Get the list of available competitions.
The team id are unique in the API and teams keep it across all seasons
Sample logo of a team :
All the parameters of this endpoint can be used together.
QUERY PARAMETERS
integer
The id of the team
string
Example:name=Red Bull Racing
The name of the team
string>= 3 characters
Example:search=Red bull
Allow to search for a team name
HEADER PARAMETERS
string
Your API-Keyid
name
search
x-rapidapi-key
required7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 32/56

--- Page 33 ---
Responses
200 OK
Request samples
PhpPythonNodeJavaScriptCurlRubyUse Cases
$client = new httpClient
$request  = new httpClientRequest
$request ->setRequestUrl 'https://v1.formula-1.api-sports.io/teams'
$request ->setRequestMethod 'GET'
$request ->setHeaders array
    'x-rapidapi-host'  => 'v1.formula-1.api-sports.io'
    'x-rapidapi-key'  => 'XxXxXxXxXxXxXxXxXxXxXxXx'
$client->enqueue $request ->send
$response  = $client->getResponse
echo $response ->getBody
Response samples
200GET/teams
Copy
\
;
\
\
;
(
)
;
(
)
;
(
(
,
)
)
;
(
)
(
)
;
(
)
;
(
)
;
application/json
Expand allCollapse all Copy
{
"get": "teams"
,Content type7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 33/56

--- Page 34 ---
Drivers"parameters" : -
{
"id": "1"
}
,
"errors" : 
[ ]
,
"results" : 1
,
"response" : -
[
 … +
{
}
]
}
drivers
Get the list of available drivers.
The driver id are unique in the API and drivers keep it across all seasons
Sample image of a driver :
All the parameters of this endpoint can be used together.
This endpoint require at least one parameter.
QUERY PARAMETERS
integer
The id of the driverid7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 34/56

--- Page 35 ---
string
Example:name=Lewis Hamilton
The name of the driver
string>= 3 characters
Example:search=lewi
Allow to search for a driver name
HEADER PARAMETERS
string
Your API-Key
Responses
200 OK
Request samples
PhpPythonNodeJavaScriptCurlRubyUse Cases
$client = new httpClient
$request  = new httpClientRequest
$request ->setRequestUrl 'https://v1.formula-1.api-sports.io/drivers'
$request ->setRequestMethod 'GET'
$request ->setQuery new httpQueryString array
'search'  => 'lewi'
$request ->setHeaders array
'x-rapidapi-host'  => 'v1.formula-1.api-sports.io'
'x-rapidapi-key'  => 'XxXxXxXxXxXxXxXxXxXxXxXx'name
search
x-rapidapi-key
required
GET/drivers
Copy
\
;
\
\
;
(
)
;
(
)
;
(
\
(
(
)
)
)
;
(
(
,
)
)
;7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 35/56

--- Page 36 ---
Races$client->enqueue $request ->send
$response  = $client->getResponse
echo $response ->getBody
Response samples
200
(
)
(
)
;
(
)
;
(
)
;
application/json
Expand allCollapse all Copy
{
"get": "drivers"
,
"parameters" : -
{
"search" : "lewi"
}
,
"errors" : 
[ ]
,
"results" : 1
,
"response" : -
[
 … +
{
}
]
}
races
Get the list of available races for a competition.
For all requests to races you can add the query parameter timezone  to your request in order to retrieve
the list of races in the time zone of your choice like “Europe/London“Content type7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 36/56

--- Page 37 ---
To know the list of available time zones you have to use the endpoint timezone
Available Status
Live
Completed
Cancelled
Postponed
Scheduled
Available Types
Race
1st Qualifying
2nd Qualifying
3rd Qualifying
Sprint
1st Sprint Shootout
2nd Sprint Shootout
3rd Sprint Shootout
1st Practice
2nd Practice
3rd Practice
This endpoint requires at least one of these parameters id, date, next, last and season.
All the parameters of this endpoint can be used together.
QUERY PARAMETERS
integer
The id of the race
stringYYYY-MM-DD
Example:date=2021-12-12
A valid date
integer<= 2 characters
Example:next=30
The x next races
integer<= 2 characters
Example:last=30
The x last races
integer
The id of the competitionid
date
next
last
competition7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 37/56

--- Page 38 ---
integer
The id of the circuit
integer= 4 charactersYYYY
The season of the race
string
Enum:"Race" "1st Qualifying" "2nd Qualifying"
 "3rd
Qualifying" "Sprint" "1st Sprint Shootout"
 "2nd Sprint
Shootout" "3rd Sprint Shootout" "1st Practice"
 "2nd
Practice" "3rd Practice"
The type of the race
string
Example:timezone=Europe/London
A valid timezone
HEADER PARAMETERS
string
Your API-Key
Responses
200 OK
Request samples
PhpPythonNodeJavaScriptCurlRubyUse Cases
$client = new httpClient
$request  = new httpClientRequest
$request ->setRequestUrl 'https://v1.formula-1.api-sports.io/races'circuit
season
type
timezone
x-rapidapi-key
required
GET/races
Copy
\
;
\
\
;
(
)
;7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 38/56

--- Page 39 ---
$request ->setRequestMethod 'GET'
$request ->setQuery new httpQueryString array
'competition'  => '23'
'season'  => '2021'
$request ->setHeaders array
'x-rapidapi-host'  => 'v1.formula-1.api-sports.io'
'x-rapidapi-key'  => 'XxXxXxXxXxXxXxXxXxXxXxXx'
$client->enqueue $request ->send
$response  = $client->getResponse
echo $response ->getBody
Response samples
200
(
)
;
(
\
(
(
,
)
)
)
;
(
(
,
)
)
;
(
)
(
)
;
(
)
;
(
)
;
application/json
Expand allCollapse all Copy
{
"get": "races"
,
"parameters" : -
{
"season" : "2021"
,
"type": "race"
,
"competition" : "23"
}
,
"errors" : 
[ ]
,
"results" : 1
,
"response" : -
[
 … +
{
}
]
}Content type7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 39/56

--- Page 40 ---
Rankings
rankings/teams
Get the teams rankings for a season.
All the parameters of this endpoint can be used together.
QUERY PARAMETERS
string= 4 charactersYYYY
The season
integer
The id of the team
HEADER PARAMETERS
string
Your API-Key
Responses
200 OK
Request samples
PhpPythonNodeJavaScriptCurlRubyUse Casesseason
required
team
x-rapidapi-key
required
GET/rankings/teams7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 40/56

--- Page 41 ---
$client = new httpClient
$request  = new httpClientRequest
$request ->setRequestUrl 'https://v1.formula-1.api-sports.io/rankings/teams'
$request ->setRequestMethod 'GET'
$request ->setQuery new httpQueryString array
'season'  => '2019'
$request ->setHeaders array
'x-rapidapi-host'  => 'v1.formula-1.api-sports.io'
'x-rapidapi-key'  => 'XxXxXxXxXxXxXxXxXxXxXxXx'
$client->enqueue $request ->send
$response  = $client->getResponse
echo $response ->getBody
Response samples
200
Copy
\
;
\
\
;
(
)
;
(
)
;
(
\
(
(
)
)
)
;
(
(
,
)
)
;
(
)
(
)
;
(
)
;
(
)
;
application/json
Expand allCollapse all Copy
{
"get": "rankings"
,
"parameters" : -
{
"season" : "2019"
}
,
"errors" : 
[ ]
,
"results" : 10
,Content type7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 41/56

--- Page 42 ---
"response" : -
[
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … +
{
}
]
}
rankings/drivers
Get the drivers rankings for a season.
All the parameters of this endpoint can be used together.
QUERY PARAMETERS
integer= 4 charactersYYYY
The season
integer
The id of the driver
integer
The id of the team
HEADER PARAMETERS
string
Your API-Key
Responsesseason
required
driver
team
x-rapidapi-key
required7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 42/56

--- Page 43 ---
200 OK
Request samples
PhpPythonNodeJavaScriptCurlRubyUse Cases
$client = new httpClient
$request  = new httpClientRequest
$request ->setRequestUrl 'https://v1.formula-1.api-sports.io/rankings/drivers'
$request ->setRequestMethod 'GET'
$request ->setQuery new httpQueryString array
'season'  => '2019'
$request ->setHeaders array
'x-rapidapi-host'  => 'v1.formula-1.api-sports.io'
'x-rapidapi-key'  => 'XxXxXxXxXxXxXxXxXxXxXxXx'
$client->enqueue $request ->send
$response  = $client->getResponse
echo $response ->getBody
Response samples
200GET/rankings/drivers
Copy
\
;
\
\
;
(
)
;
(
)
;
(
\
(
(
)
)
)
;
(
(
,
)
)
;
(
)
(
)
;
(
)
;
(
)
;
application/json
Expand allCollapse all Copy
{
"get": "rankings"
,Content type7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 43/56

--- Page 44 ---
"parameters" : -
{
"season" : "2019"
}
,
"errors" : 
[ ]
,
"results" : 20
,
"response" : -
[
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … +
{
}
]
}
rankings/races
Get the rankings for a race.
All the parameters of this endpoint can be used together.
QUERY PARAMETERS
integer
The id of the racerace
required7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 44/56

--- Page 45 ---
integer
The id of the team
integer
The id of the driver
HEADER PARAMETERS
string
Your API-Key
Responses
200 OK
Request samples
PhpPythonNodeJavaScriptCurlRubyUse Cases
$client = new httpClient
$request  = new httpClientRequest
$request ->setRequestUrl 'https://v1.formula-1.api-sports.io/rankings/races'
$request ->setRequestMethod 'GET'
$request ->setQuery new httpQueryString array
'race' => '50'
$request ->setHeaders array
'x-rapidapi-host'  => 'v1.formula-1.api-sports.io'
'x-rapidapi-key'  => 'XxXxXxXxXxXxXxXxXxXxXxXx'
$client->enqueue $request ->sendteam
driver
x-rapidapi-key
required
GET/rankings/races
Copy
\
;
\
\
;
(
)
;
(
)
;
(
\
(
(
)
)
)
;
(
(
,
)
)
;
(
)
(
)
;7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 45/56

--- Page 46 ---
$response  = $client->getResponse
echo $response ->getBody
Response samples
200
(
)
;
(
)
;
application/json
Expand allCollapse all CopyContent type7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 46/56

--- Page 47 ---
{"get": "rankings"
,
"parameters" : -
{
"race": "50"
}
,
"errors" : 
[ ]
,
"results" : 20
,
"response" : -
[
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … +
{
}
]
}
rankings/fastestlaps
Get the ranking of the fastest laps for a race.
All the parameters of this endpoint can be used together.
QUERY PARAMETERS7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 47/56

--- Page 48 ---
integer
The id of the race
integer
The id of the team
integer
The id of the driver
HEADER PARAMETERS
string
Your API-Key
Responses
200 OK
Request samples
PhpPythonNodeJavaScriptCurlRubyUse Cases
$client = new httpClient
$request  = new httpClientRequest
$request ->setRequestUrl 'https://v1.formula-1.api-sports.io/rankings/fastestlaps
$request ->setRequestMethod 'GET'
$request ->setQuery new httpQueryString array
'race' => '50'
$request ->setHeaders array
'x-rapidapi-host'  => 'v1.formula-1.api-sports.io'
'x-rapidapi-key'  => 'XxXxXxXxXxXxXxXxXxXxXxXx'race
required
team
driver
x-rapidapi-key
required
GET/rankings/fastestlaps
Copy
\
;
\
\
;
(
(
)
;
(
\
(
(
)
)
)
;
(
(
,7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 48/56

--- Page 49 ---
 $client->enqueue $request ->send
$response  = $client->getResponse
echo $response ->getBody
Response samples
200
)
)
;
(
)
(
)
;
(
)
;
(
)
;
application/json
Expand allCollapse all Copy
{
"get": "rankings"
,
"parameters" : -
{
"race": "50"
}
,
"errors" : 
[ ]
,
"results" : 20
,Content type7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 49/56

--- Page 50 ---
"response" : -
[
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … +
{
}
]
}
rankings/startinggrid
Get the starting grid for a race.
All the parameters of this endpoint can be used together.
QUERY PARAMETERS
integer
The id of the race
integer
The id of the teamrace
required
team7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 50/56

--- Page 51 ---
integer
The id of the driver
HEADER PARAMETERS
string
Your API-Key
Responses
200 OK
Request samples
PhpPythonNodeJavaScriptCurlRubyUse Cases
$client = new httpClient
$request  = new httpClientRequest
$request ->setRequestUrl 'https://v1.formula-1.api-sports.io/rankings/startinggri
$request ->setRequestMethod 'GET'
$request ->setQuery new httpQueryString array
'race' => '50'
$request ->setHeaders array
'x-rapidapi-host'  => 'v1.formula-1.api-sports.io'
'x-rapidapi-key'  => 'XxXxXxXxXxXxXxXxXxXxXxXx'
$client->enqueue $request ->send
$response  = $client->getResponsedriver
x-rapidapi-key
required
GET/rankings/startinggrid
Copy
\
;
\
\
;
(
(
)
;
(
\
(
(
)
)
)
;
(
(
,
)
)
;
(
)
(
)
;
(
)
;7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 51/56

--- Page 52 ---
 echo $response ->getBody
Response samples
200
(
)
;
application/json
Expand allCollapse all CopyContent type7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 52/56

--- Page 53 ---
Pit Stops
{"get": "rankings"
,
"parameters" : -
{
"race": "50"
}
,
"errors" : 
[ ]
,
"results" : 20
,
"response" : -
[
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … +
{
}
]
}
pitstops7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 53/56

--- Page 54 ---
Get the list of pit stops made by all drivers during a race.
All the parameters of this endpoint can be used together.
QUERY PARAMETERS
integer
The id of the race
integer
The id of the team
integer
The id of the driver
HEADER PARAMETERS
string
Your API-Key
Responses
200 OK
Request samples
PhpPythonNodeJavaScriptCurlRubyUse Cases
$client = new httpClient
$request  = new httpClientRequest
$request ->setRequestUrl 'https://v1.formula-1.api-sports.io/pitstops'
$request ->setRequestMethod 'GET'
$request ->setQuery new httpQueryString arrayrace
required
team
driver
x-rapidapi-key
required
GET/pitstops
Copy
\
;
\
\
;
(
)
;
(
)
;
(
\
(
(7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 54/56

--- Page 55 ---
'race' => '50'
$request ->setHeaders array
'x-rapidapi-host'  => 'v1.formula-1.api-sports.io'
'x-rapidapi-key'  => 'XxXxXxXxXxXxXxXxXxXxXxXx'
$client->enqueue $request ->send
$response  = $client->getResponse
echo $response ->getBody
Response samples
200
)
)
)
;
(
(
,
)
)
;
(
)
(
)
;
(
)
;
(
)
;
application/json
Expand allCollapse all Copy
{
"get": "pitstop"
,
"parameters" : -
{
"race": "50"
}
,
"errors" : 
[ ]
,
"results" : 22
,Content type7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 55/56

--- Page 56 ---
"response" : -
[
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … ,+
{
}
 … +
{
}
]
}7/20/25, 9:20 PM API-Sports - Documentation Formula-1
https://api-sports.io/documentation/formula-1/v1 56/56
